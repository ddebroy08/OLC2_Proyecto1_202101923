//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from Language.g4 by ANTLR 4.13.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace analyzer {
using System;
using System.IO;
using System.Text;
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.2")]
[System.CLSCompliant(false)]
public partial class LanguageLexer : Lexer {
	protected static DFA[] decisionToDFA;
	protected static PredictionContextCache sharedContextCache = new PredictionContextCache();
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, T__32=33, T__33=34, T__34=35, T__35=36, T__36=37, T__37=38, 
		T__38=39, T__39=40, T__40=41, T__41=42, T__42=43, T__43=44, T__44=45, 
		T__45=46, T__46=47, T__47=48, T__48=49, T__49=50, T__50=51, T__51=52, 
		T__52=53, T__53=54, T__54=55, Types=56, INT=57, BOOL=58, FLOAT=59, STRING=60, 
		RUNE=61, WS=62, ID=63, COMMENT=64, ML_COMMENT=65;
	public static string[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "T__32", 
		"T__33", "T__34", "T__35", "T__36", "T__37", "T__38", "T__39", "T__40", 
		"T__41", "T__42", "T__43", "T__44", "T__45", "T__46", "T__47", "T__48", 
		"T__49", "T__50", "T__51", "T__52", "T__53", "T__54", "Types", "INT", 
		"BOOL", "FLOAT", "STRING", "RUNE", "ESC", "WS", "ID", "COMMENT", "ML_COMMENT"
	};


	public LanguageLexer(ICharStream input)
	: this(input, Console.Out, Console.Error) { }

	public LanguageLexer(ICharStream input, TextWriter output, TextWriter errorOutput)
	: base(input, output, errorOutput)
	{
		Interpreter = new LexerATNSimulator(this, _ATN, decisionToDFA, sharedContextCache);
	}

	private static readonly string[] _LiteralNames = {
		null, "'var'", "'='", "';'", "':='", "'[][]'", "'{'", "','", "'}'", "'['", 
		"']'", "'func'", "'('", "')'", "'struct'", "':'", "'class'", "'fmt.Println('", 
		"'if'", "'else'", "'while'", "'for'", "'range'", "'switch'", "'break'", 
		"'continue'", "'return'", "'case'", "'default'", "'-'", "'!'", "'*'", 
		"'/'", "'%'", "'+'", "'++'", "'--'", "'+='", "'-='", "'>'", "'<'", "'>='", 
		"'<='", "'=='", "'!='", "'&&'", "'||'", "'strconv.Atoi('", "'strconv.ParseFloat('", 
		"'reflect.TypeOf('", "'slices.Index('", "'strings.Join('", "'append('", 
		"'len('", "'new'", "'.'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, "Types", "INT", "BOOL", 
		"FLOAT", "STRING", "RUNE", "WS", "ID", "COMMENT", "ML_COMMENT"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Language.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ChannelNames { get { return channelNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override int[] SerializedAtn { get { return _serializedATN; } }

	static LanguageLexer() {
		decisionToDFA = new DFA[_ATN.NumberOfDecisions];
		for (int i = 0; i < _ATN.NumberOfDecisions; i++) {
			decisionToDFA[i] = new DFA(_ATN.GetDecisionState(i), i);
		}
	}
	private static int[] _serializedATN = {
		4,0,65,518,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,6,7,
		6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,13,7,13,2,14,
		7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,19,2,20,7,20,2,21,
		7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,26,7,26,2,27,7,27,2,28,
		7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,32,2,33,7,33,2,34,7,34,2,35,
		7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,39,7,39,2,40,7,40,2,41,7,41,2,42,
		7,42,2,43,7,43,2,44,7,44,2,45,7,45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,
		7,49,2,50,7,50,2,51,7,51,2,52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,
		7,56,2,57,7,57,2,58,7,58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,
		7,63,2,64,7,64,2,65,7,65,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,3,1,
		4,1,4,1,4,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,
		10,1,10,1,10,1,11,1,11,1,12,1,12,1,13,1,13,1,13,1,13,1,13,1,13,1,13,1,
		14,1,14,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,
		16,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,1,17,1,18,1,18,1,18,1,18,1,
		18,1,19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,21,1,21,1,21,1,
		21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,1,23,1,
		23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,1,25,1,
		25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,26,1,27,1,27,1,27,1,27,1,27,1,
		27,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,
		33,1,34,1,34,1,34,1,35,1,35,1,35,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,
		38,1,39,1,39,1,40,1,40,1,40,1,41,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,
		43,1,44,1,44,1,44,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,46,1,46,1,
		46,1,46,1,46,1,46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,
		47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,
		48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,48,1,
		48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,
		49,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,50,1,
		50,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,
		53,1,53,1,53,1,53,1,54,1,54,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
		55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,55,1,
		55,1,55,3,55,430,8,55,1,56,4,56,433,8,56,11,56,12,56,434,1,57,1,57,1,57,
		1,57,1,57,1,57,1,57,1,57,1,57,3,57,446,8,57,1,58,4,58,449,8,58,11,58,12,
		58,450,1,58,1,58,4,58,455,8,58,11,58,12,58,456,1,59,1,59,1,59,5,59,462,
		8,59,10,59,12,59,465,9,59,1,59,1,59,1,60,1,60,1,60,1,60,3,60,473,8,60,
		1,60,1,60,1,61,1,61,1,61,1,62,4,62,481,8,62,11,62,12,62,482,1,62,1,62,
		1,63,1,63,5,63,489,8,63,10,63,12,63,492,9,63,1,64,1,64,1,64,1,64,5,64,
		498,8,64,10,64,12,64,501,9,64,1,64,1,64,1,65,1,65,1,65,1,65,5,65,509,8,
		65,10,65,12,65,512,9,65,1,65,1,65,1,65,1,65,1,65,1,510,0,66,1,1,3,2,5,
		3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,
		33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,28,
		57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,39,79,40,
		81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,50,101,51,103,
		52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,119,60,121,61,123,
		0,125,62,127,63,129,64,131,65,1,0,8,1,0,48,57,2,0,34,34,92,92,2,0,39,39,
		92,92,6,0,34,34,39,39,92,92,110,110,114,114,116,116,3,0,9,10,13,13,32,
		32,2,0,65,90,97,122,3,0,48,57,65,90,97,122,2,0,10,10,13,13,531,0,1,1,0,
		0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,
		1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,
		0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,
		1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,
		0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,
		1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,
		0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,
		1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,
		0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,
		1,0,0,0,0,103,1,0,0,0,0,105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,
		1,0,0,0,0,113,1,0,0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,
		1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,1,133,
		1,0,0,0,3,137,1,0,0,0,5,139,1,0,0,0,7,141,1,0,0,0,9,144,1,0,0,0,11,149,
		1,0,0,0,13,151,1,0,0,0,15,153,1,0,0,0,17,155,1,0,0,0,19,157,1,0,0,0,21,
		159,1,0,0,0,23,164,1,0,0,0,25,166,1,0,0,0,27,168,1,0,0,0,29,175,1,0,0,
		0,31,177,1,0,0,0,33,183,1,0,0,0,35,196,1,0,0,0,37,199,1,0,0,0,39,204,1,
		0,0,0,41,210,1,0,0,0,43,214,1,0,0,0,45,220,1,0,0,0,47,227,1,0,0,0,49,233,
		1,0,0,0,51,242,1,0,0,0,53,249,1,0,0,0,55,254,1,0,0,0,57,262,1,0,0,0,59,
		264,1,0,0,0,61,266,1,0,0,0,63,268,1,0,0,0,65,270,1,0,0,0,67,272,1,0,0,
		0,69,274,1,0,0,0,71,277,1,0,0,0,73,280,1,0,0,0,75,283,1,0,0,0,77,286,1,
		0,0,0,79,288,1,0,0,0,81,290,1,0,0,0,83,293,1,0,0,0,85,296,1,0,0,0,87,299,
		1,0,0,0,89,302,1,0,0,0,91,305,1,0,0,0,93,308,1,0,0,0,95,322,1,0,0,0,97,
		342,1,0,0,0,99,358,1,0,0,0,101,372,1,0,0,0,103,386,1,0,0,0,105,394,1,0,
		0,0,107,399,1,0,0,0,109,403,1,0,0,0,111,429,1,0,0,0,113,432,1,0,0,0,115,
		445,1,0,0,0,117,448,1,0,0,0,119,458,1,0,0,0,121,468,1,0,0,0,123,476,1,
		0,0,0,125,480,1,0,0,0,127,486,1,0,0,0,129,493,1,0,0,0,131,504,1,0,0,0,
		133,134,5,118,0,0,134,135,5,97,0,0,135,136,5,114,0,0,136,2,1,0,0,0,137,
		138,5,61,0,0,138,4,1,0,0,0,139,140,5,59,0,0,140,6,1,0,0,0,141,142,5,58,
		0,0,142,143,5,61,0,0,143,8,1,0,0,0,144,145,5,91,0,0,145,146,5,93,0,0,146,
		147,5,91,0,0,147,148,5,93,0,0,148,10,1,0,0,0,149,150,5,123,0,0,150,12,
		1,0,0,0,151,152,5,44,0,0,152,14,1,0,0,0,153,154,5,125,0,0,154,16,1,0,0,
		0,155,156,5,91,0,0,156,18,1,0,0,0,157,158,5,93,0,0,158,20,1,0,0,0,159,
		160,5,102,0,0,160,161,5,117,0,0,161,162,5,110,0,0,162,163,5,99,0,0,163,
		22,1,0,0,0,164,165,5,40,0,0,165,24,1,0,0,0,166,167,5,41,0,0,167,26,1,0,
		0,0,168,169,5,115,0,0,169,170,5,116,0,0,170,171,5,114,0,0,171,172,5,117,
		0,0,172,173,5,99,0,0,173,174,5,116,0,0,174,28,1,0,0,0,175,176,5,58,0,0,
		176,30,1,0,0,0,177,178,5,99,0,0,178,179,5,108,0,0,179,180,5,97,0,0,180,
		181,5,115,0,0,181,182,5,115,0,0,182,32,1,0,0,0,183,184,5,102,0,0,184,185,
		5,109,0,0,185,186,5,116,0,0,186,187,5,46,0,0,187,188,5,80,0,0,188,189,
		5,114,0,0,189,190,5,105,0,0,190,191,5,110,0,0,191,192,5,116,0,0,192,193,
		5,108,0,0,193,194,5,110,0,0,194,195,5,40,0,0,195,34,1,0,0,0,196,197,5,
		105,0,0,197,198,5,102,0,0,198,36,1,0,0,0,199,200,5,101,0,0,200,201,5,108,
		0,0,201,202,5,115,0,0,202,203,5,101,0,0,203,38,1,0,0,0,204,205,5,119,0,
		0,205,206,5,104,0,0,206,207,5,105,0,0,207,208,5,108,0,0,208,209,5,101,
		0,0,209,40,1,0,0,0,210,211,5,102,0,0,211,212,5,111,0,0,212,213,5,114,0,
		0,213,42,1,0,0,0,214,215,5,114,0,0,215,216,5,97,0,0,216,217,5,110,0,0,
		217,218,5,103,0,0,218,219,5,101,0,0,219,44,1,0,0,0,220,221,5,115,0,0,221,
		222,5,119,0,0,222,223,5,105,0,0,223,224,5,116,0,0,224,225,5,99,0,0,225,
		226,5,104,0,0,226,46,1,0,0,0,227,228,5,98,0,0,228,229,5,114,0,0,229,230,
		5,101,0,0,230,231,5,97,0,0,231,232,5,107,0,0,232,48,1,0,0,0,233,234,5,
		99,0,0,234,235,5,111,0,0,235,236,5,110,0,0,236,237,5,116,0,0,237,238,5,
		105,0,0,238,239,5,110,0,0,239,240,5,117,0,0,240,241,5,101,0,0,241,50,1,
		0,0,0,242,243,5,114,0,0,243,244,5,101,0,0,244,245,5,116,0,0,245,246,5,
		117,0,0,246,247,5,114,0,0,247,248,5,110,0,0,248,52,1,0,0,0,249,250,5,99,
		0,0,250,251,5,97,0,0,251,252,5,115,0,0,252,253,5,101,0,0,253,54,1,0,0,
		0,254,255,5,100,0,0,255,256,5,101,0,0,256,257,5,102,0,0,257,258,5,97,0,
		0,258,259,5,117,0,0,259,260,5,108,0,0,260,261,5,116,0,0,261,56,1,0,0,0,
		262,263,5,45,0,0,263,58,1,0,0,0,264,265,5,33,0,0,265,60,1,0,0,0,266,267,
		5,42,0,0,267,62,1,0,0,0,268,269,5,47,0,0,269,64,1,0,0,0,270,271,5,37,0,
		0,271,66,1,0,0,0,272,273,5,43,0,0,273,68,1,0,0,0,274,275,5,43,0,0,275,
		276,5,43,0,0,276,70,1,0,0,0,277,278,5,45,0,0,278,279,5,45,0,0,279,72,1,
		0,0,0,280,281,5,43,0,0,281,282,5,61,0,0,282,74,1,0,0,0,283,284,5,45,0,
		0,284,285,5,61,0,0,285,76,1,0,0,0,286,287,5,62,0,0,287,78,1,0,0,0,288,
		289,5,60,0,0,289,80,1,0,0,0,290,291,5,62,0,0,291,292,5,61,0,0,292,82,1,
		0,0,0,293,294,5,60,0,0,294,295,5,61,0,0,295,84,1,0,0,0,296,297,5,61,0,
		0,297,298,5,61,0,0,298,86,1,0,0,0,299,300,5,33,0,0,300,301,5,61,0,0,301,
		88,1,0,0,0,302,303,5,38,0,0,303,304,5,38,0,0,304,90,1,0,0,0,305,306,5,
		124,0,0,306,307,5,124,0,0,307,92,1,0,0,0,308,309,5,115,0,0,309,310,5,116,
		0,0,310,311,5,114,0,0,311,312,5,99,0,0,312,313,5,111,0,0,313,314,5,110,
		0,0,314,315,5,118,0,0,315,316,5,46,0,0,316,317,5,65,0,0,317,318,5,116,
		0,0,318,319,5,111,0,0,319,320,5,105,0,0,320,321,5,40,0,0,321,94,1,0,0,
		0,322,323,5,115,0,0,323,324,5,116,0,0,324,325,5,114,0,0,325,326,5,99,0,
		0,326,327,5,111,0,0,327,328,5,110,0,0,328,329,5,118,0,0,329,330,5,46,0,
		0,330,331,5,80,0,0,331,332,5,97,0,0,332,333,5,114,0,0,333,334,5,115,0,
		0,334,335,5,101,0,0,335,336,5,70,0,0,336,337,5,108,0,0,337,338,5,111,0,
		0,338,339,5,97,0,0,339,340,5,116,0,0,340,341,5,40,0,0,341,96,1,0,0,0,342,
		343,5,114,0,0,343,344,5,101,0,0,344,345,5,102,0,0,345,346,5,108,0,0,346,
		347,5,101,0,0,347,348,5,99,0,0,348,349,5,116,0,0,349,350,5,46,0,0,350,
		351,5,84,0,0,351,352,5,121,0,0,352,353,5,112,0,0,353,354,5,101,0,0,354,
		355,5,79,0,0,355,356,5,102,0,0,356,357,5,40,0,0,357,98,1,0,0,0,358,359,
		5,115,0,0,359,360,5,108,0,0,360,361,5,105,0,0,361,362,5,99,0,0,362,363,
		5,101,0,0,363,364,5,115,0,0,364,365,5,46,0,0,365,366,5,73,0,0,366,367,
		5,110,0,0,367,368,5,100,0,0,368,369,5,101,0,0,369,370,5,120,0,0,370,371,
		5,40,0,0,371,100,1,0,0,0,372,373,5,115,0,0,373,374,5,116,0,0,374,375,5,
		114,0,0,375,376,5,105,0,0,376,377,5,110,0,0,377,378,5,103,0,0,378,379,
		5,115,0,0,379,380,5,46,0,0,380,381,5,74,0,0,381,382,5,111,0,0,382,383,
		5,105,0,0,383,384,5,110,0,0,384,385,5,40,0,0,385,102,1,0,0,0,386,387,5,
		97,0,0,387,388,5,112,0,0,388,389,5,112,0,0,389,390,5,101,0,0,390,391,5,
		110,0,0,391,392,5,100,0,0,392,393,5,40,0,0,393,104,1,0,0,0,394,395,5,108,
		0,0,395,396,5,101,0,0,396,397,5,110,0,0,397,398,5,40,0,0,398,106,1,0,0,
		0,399,400,5,110,0,0,400,401,5,101,0,0,401,402,5,119,0,0,402,108,1,0,0,
		0,403,404,5,46,0,0,404,110,1,0,0,0,405,406,5,105,0,0,406,407,5,110,0,0,
		407,430,5,116,0,0,408,409,5,102,0,0,409,410,5,108,0,0,410,411,5,111,0,
		0,411,412,5,97,0,0,412,413,5,116,0,0,413,414,5,54,0,0,414,430,5,52,0,0,
		415,416,5,115,0,0,416,417,5,116,0,0,417,418,5,114,0,0,418,419,5,105,0,
		0,419,420,5,110,0,0,420,430,5,103,0,0,421,422,5,98,0,0,422,423,5,111,0,
		0,423,424,5,111,0,0,424,430,5,108,0,0,425,426,5,114,0,0,426,427,5,117,
		0,0,427,428,5,110,0,0,428,430,5,101,0,0,429,405,1,0,0,0,429,408,1,0,0,
		0,429,415,1,0,0,0,429,421,1,0,0,0,429,425,1,0,0,0,430,112,1,0,0,0,431,
		433,7,0,0,0,432,431,1,0,0,0,433,434,1,0,0,0,434,432,1,0,0,0,434,435,1,
		0,0,0,435,114,1,0,0,0,436,437,5,116,0,0,437,438,5,114,0,0,438,439,5,117,
		0,0,439,446,5,101,0,0,440,441,5,102,0,0,441,442,5,97,0,0,442,443,5,108,
		0,0,443,444,5,115,0,0,444,446,5,101,0,0,445,436,1,0,0,0,445,440,1,0,0,
		0,446,116,1,0,0,0,447,449,7,0,0,0,448,447,1,0,0,0,449,450,1,0,0,0,450,
		448,1,0,0,0,450,451,1,0,0,0,451,452,1,0,0,0,452,454,5,46,0,0,453,455,7,
		0,0,0,454,453,1,0,0,0,455,456,1,0,0,0,456,454,1,0,0,0,456,457,1,0,0,0,
		457,118,1,0,0,0,458,463,5,34,0,0,459,462,3,123,61,0,460,462,8,1,0,0,461,
		459,1,0,0,0,461,460,1,0,0,0,462,465,1,0,0,0,463,461,1,0,0,0,463,464,1,
		0,0,0,464,466,1,0,0,0,465,463,1,0,0,0,466,467,5,34,0,0,467,120,1,0,0,0,
		468,472,5,39,0,0,469,473,8,2,0,0,470,471,5,92,0,0,471,473,9,0,0,0,472,
		469,1,0,0,0,472,470,1,0,0,0,473,474,1,0,0,0,474,475,5,39,0,0,475,122,1,
		0,0,0,476,477,5,92,0,0,477,478,7,3,0,0,478,124,1,0,0,0,479,481,7,4,0,0,
		480,479,1,0,0,0,481,482,1,0,0,0,482,480,1,0,0,0,482,483,1,0,0,0,483,484,
		1,0,0,0,484,485,6,62,0,0,485,126,1,0,0,0,486,490,7,5,0,0,487,489,7,6,0,
		0,488,487,1,0,0,0,489,492,1,0,0,0,490,488,1,0,0,0,490,491,1,0,0,0,491,
		128,1,0,0,0,492,490,1,0,0,0,493,494,5,47,0,0,494,495,5,47,0,0,495,499,
		1,0,0,0,496,498,8,7,0,0,497,496,1,0,0,0,498,501,1,0,0,0,499,497,1,0,0,
		0,499,500,1,0,0,0,500,502,1,0,0,0,501,499,1,0,0,0,502,503,6,64,0,0,503,
		130,1,0,0,0,504,505,5,47,0,0,505,506,5,42,0,0,506,510,1,0,0,0,507,509,
		9,0,0,0,508,507,1,0,0,0,509,512,1,0,0,0,510,511,1,0,0,0,510,508,1,0,0,
		0,511,513,1,0,0,0,512,510,1,0,0,0,513,514,5,42,0,0,514,515,5,47,0,0,515,
		516,1,0,0,0,516,517,6,65,0,0,517,132,1,0,0,0,13,0,429,434,445,450,456,
		461,463,472,482,490,499,510,1,6,0,0
	};

	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN);


}
} // namespace analyzer
